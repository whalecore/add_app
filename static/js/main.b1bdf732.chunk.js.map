{"version":3,"sources":["stores/userStore.ts","pages/home/Home.page.tsx","common/utils/checkEmail.ts","components/button/CustomButton.component.tsx","components/signup/SignUp.component.tsx","components/header/Header.component.tsx","components/ops-item/OpsItem.component.tsx","stores/opsStore.ts","common/utils/checkInput.ts","components/ops-item/ops-field/OpsConfirm.tsx","components/loading-modal/LoadingModal.component.tsx","components/ops-item/ops-field/OpsEnter.tsx","components/ops-item/ops-field/OpsResult.tsx","common/opsItems.ts","components/ops-iter/OpsIter.component.tsx","common/utils/maskEmail.ts","pages/ops/Ops.page.tsx","App.tsx","index.tsx"],"names":["userStore","makeObservable","userData","signin","email","password","this","isLogged","signout","observable","action","bound","HomePage","className","Helmet","tag","Link","to","checkEmail","RegExp","test","observer","title","handleClick","onClick","useState","userInput","setUserInput","emailError","setEmailError","handleChange","e","target","name","value","prevState","onSubmit","preventDefault","for","type","onChange","invalid","undefined","isOpen","setIsOpen","color","expand","light","navbar","body","children","outline","opsStore","numsArray","filteredNumsArray","setNumbers","nums","copyArrayToFiltered","clearFilteredArray","sumNumbers","reduce","acc","val","addNumber","num","push","cleaArray","sortAsc","sort","a","b","sortDesc","greaterThan","filter","lesserThan","checkInput","input","eqNum","setEqNum","greater","setGreater","length","join","toggle","caret","header","parseInt","Number","isNaN","LoadingModal","props","onShow","show","setShow","prgBar","setPrgBar","useEffect","timer","setInterval","Math","min","timeout","setTimeout","clearInterval","clearTimeout","Modal","onHide","backdrop","keyboard","keyboardStatus","centered","Title","Body","ProgressBar","animated","variant","now","numbers","tempNum","setTempNum","listener","event","code","handleTempNumAdd","document","addEventListener","removeEventListener","Fragment","map","number","index","prevArr","handleArrayChange","handleTempNumChange","sum","Table","striped","bordered","hover","style","opsItems","id","content","itemIndex","setItemIndex","decItem","renderContent","maskEmail","domainName","substring","indexOf","replace","repeat","lg","path","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b1bdf732.chunk.js","sourcesContent":["import { makeObservable, action, observable } from \"mobx\";\r\n\r\nexport interface UserInterface {\r\n  email?: string;\r\n  password?: string;\r\n  isLogged?: boolean;\r\n}\r\n\r\nconst userStores = () => {\r\n  return makeObservable(\r\n    {\r\n      userData: {} as UserInterface,\r\n      signin({ email, password }: UserInterface): void {\r\n        if (email && password) {\r\n          this.userData = {\r\n            email: email,\r\n            password: password,\r\n            isLogged: true,\r\n          };\r\n        }\r\n      },\r\n      signout(): void {\r\n        this.userData = {};\r\n      },\r\n    },\r\n    {\r\n      userData: observable,\r\n      signin: action.bound,\r\n      signout: action.bound,\r\n    }\r\n  );\r\n};\r\n\r\nexport const userStore = userStores();\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nimport { userStore } from \"../../stores/userStore\";\r\n\r\nconst HomePage = (): JSX.Element => {\r\n  const renderContent = (): JSX.Element => {\r\n    return userStore.userData.isLogged ? (\r\n      <div>\r\n        <h2>Перейти к сложению</h2>\r\n        <Button tag={Link} to=\"/ops\">\r\n          К сложению\r\n        </Button>\r\n      </div>\r\n    ) : (\r\n      <div>\r\n        <h2>Добро пожаловать!</h2>\r\n        <Button tag={Link} to=\"/signup\">\r\n          Войти\r\n        </Button>\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"mt-2 text-center\">\r\n      <Helmet>\r\n        <title>Сложение</title>\r\n      </Helmet>\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","export const checkEmail = (email: string): boolean => {\r\n  const checkString = new RegExp(\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  );\r\n  if (!checkString.test(email)) return false;\r\n  return true;\r\n};\r\n","import { Button } from \"reactstrap\";\r\nimport { observer } from \"mobx-react\";\r\n\r\ninterface CustomButtonProps {\r\n  title: string;\r\n  className?: string;\r\n  handleClick(): void;\r\n}\r\n\r\nconst CustomButton = ({ title, className, handleClick }: CustomButtonProps) => {\r\n  return (\r\n    <Button className={className} onClick={handleClick}>\r\n      {title}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default observer(CustomButton);\r\n","import React, { SyntheticEvent, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport { Form, FormGroup, Input, Label } from \"reactstrap\";\r\n\r\nimport { UserInterface, userStore } from \"../../stores/userStore\";\r\nimport { checkEmail } from \"../../common/utils/checkEmail\";\r\nimport CustomButton from \"../button/CustomButton.component\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst SignUp: React.FC = () => {\r\n  const [userInput, setUserInput] = useState<UserInterface>({\r\n    email: \"\",\r\n    password: \"\",\r\n    isLogged: false,\r\n  });\r\n\r\n  const [emailError, setEmailError] = useState(\"\");\r\n\r\n  const handleChange = (e: SyntheticEvent): void => {\r\n    const { name, value } = e.target as HTMLTextAreaElement;\r\n\r\n    if (name === \"email\" && !checkEmail(value)) {\r\n      setEmailError(\"Неправильный адрес email\");\r\n    } else if (name === \"email\" && checkEmail(value)) {\r\n      setEmailError(\"\");\r\n    }\r\n\r\n    setUserInput((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSignIn = (): void => {\r\n    setUserInput((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        isLogged: true,\r\n      };\r\n    });\r\n    if (userInput) userStore.signin(userInput);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <Helmet><title>Вход</title></Helmet>\r\n      <Form\r\n        className=\"w-50\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n        }}\r\n      >\r\n        <FormGroup>\r\n          <Label for=\"email\">E-mail</Label>\r\n          <Input\r\n            className=\"mt-2\"\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={userInput?.email}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n            }}\r\n            invalid={emailError ? true : undefined}\r\n          />\r\n          <Label for=\"email\">Пароль</Label>\r\n          <Input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={userInput?.password}\r\n            onChange={(e) => {\r\n              handleChange(e);\r\n            }}\r\n          />\r\n          <div className=\"text-center\">\r\n            <CustomButton\r\n              title=\"Войти\"\r\n              className={`mt-2 ${\r\n                userInput.email && userInput.password && !emailError\r\n                  ? \"\"\r\n                  : \"disabled\"\r\n              }`}\r\n              handleClick={handleSignIn}\r\n            />\r\n          </div>\r\n        </FormGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(SignUp);\r\n","import React, { useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Collapse,\r\n  Nav,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  NavLink,\r\n  NavItem,\r\n} from \"reactstrap\";\r\n\r\nimport { userStore } from \"../../stores/userStore\";\r\n\r\nconst Header: React.FC = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const loggedIn = (): JSX.Element => {\r\n    return userStore.userData.isLogged ? (\r\n      <NavLink\r\n        onClick={() => {\r\n          userStore.signout();\r\n        }}\r\n        tag={Link}\r\n        to=\"/add_app\"\r\n      >\r\n        Выйти из аккаунта\r\n      </NavLink>\r\n    ) : (\r\n      <NavLink tag={Link} to=\"/signup\">\r\n        Войти в аккаунт\r\n      </NavLink>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Navbar className=\"mb-3\" color=\"light\" expand=\"md\" light>\r\n      <NavbarBrand tag={Link} to=\"/add_app\">сложение</NavbarBrand>\r\n      <NavbarToggler\r\n        onClick={() => {\r\n          setIsOpen(!isOpen);\r\n        }}\r\n      />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"ms-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink tag={Link} to=\"/ops\">\r\n              К сложению\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>{loggedIn()}</NavItem>\r\n        </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default observer(Header);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport { Card, CardBody, CardText, CardTitle } from \"reactstrap\";\r\n\r\nimport \"./OpsItem.styles.css\";\r\n\r\ninterface OpsItemProps {\r\n  title: string;\r\n  body: string;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst OpsItem = ({ body, title, children }: OpsItemProps): JSX.Element => {\r\n  return (\r\n    <Card\r\n      outline\r\n      body\r\n      color=\"secondary\"\r\n      className=\"text-center mx-auto ops-card\"\r\n    >\r\n      <CardBody>\r\n        <CardTitle tag=\"h5\">{title}</CardTitle>\r\n        <CardText tag={'span'}>\r\n          {body}\r\n          <div>\r\n          {children}\r\n          </div>\r\n        </CardText>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default observer(OpsItem);\r\n","import { makeObservable, action, observable } from \"mobx\";\r\n\r\nconst opsStores = () => {\r\n  return makeObservable(\r\n    {\r\n      numsArray: [] as number[],\r\n      filteredNumsArray: [] as number[],\r\n      setNumbers(nums: number[]): void {\r\n        this.numsArray = nums;\r\n      },\r\n      copyArrayToFiltered(): void {\r\n        this.filteredNumsArray = this.numsArray;\r\n      },\r\n      clearFilteredArray(): void {\r\n        this.filteredNumsArray = [];\r\n      },\r\n      sumNumbers(): number {\r\n        const sum = this.numsArray.reduce((acc, val) => {\r\n          return acc + val;\r\n        }, 0);\r\n        return sum;\r\n      },\r\n      addNumber(num: number): void {\r\n        this.numsArray.push(num);\r\n      },\r\n      cleaArray(): void {\r\n        this.numsArray = [];\r\n      },\r\n      sortAsc(): void {\r\n        this.numsArray.sort((a, b) => {\r\n          return a - b;\r\n        });\r\n      },\r\n      sortDesc(): void {\r\n        this.numsArray.sort((a, b) => {\r\n          return b - a;\r\n        });\r\n      },\r\n      greaterThan(num: number): number[] {\r\n        this.copyArrayToFiltered();\r\n        return this.filteredNumsArray = this.numsArray.filter((a) => a > num);\r\n      },\r\n      lesserThan(num: number): number[] {\r\n        this.copyArrayToFiltered();\r\n        return this.filteredNumsArray = this.numsArray.filter((a) => a < num);\r\n      },\r\n    },\r\n    {\r\n      numsArray: observable,\r\n      filteredNumsArray: observable,\r\n      clearFilteredArray: action.bound,\r\n      setNumbers: action.bound,\r\n      addNumber: action.bound,\r\n      cleaArray: action.bound,\r\n      sortAsc: action.bound,\r\n      sortDesc: action.bound,\r\n      lesserThan: action.bound,\r\n      greaterThan: action.bound,\r\n      sumNumbers: action.bound\r\n    }\r\n  );\r\n};\r\n\r\nexport const opsStore = opsStores();\r\n","export const checkInput = (input: string): boolean => {\r\n    if (!new RegExp(/^\\d+$/).test(input)) return true;\r\n    return false;\r\n  };","import { useState } from \"react\";\r\n\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport CustomButton from \"../../button/CustomButton.component\";\r\n\r\nimport { opsStore } from \"../../../stores/opsStore\";\r\nimport {\r\n  InputGroup,\r\n  Input,\r\n  Button,\r\n  ButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport { checkInput } from \"../../../common/utils/checkInput\";\r\n\r\nconst OpsConfirm = (): JSX.Element => {\r\n  const [eqNum, setEqNum] = useState<number>();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [greater, setGreater] = useState(true);\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"lead mt-2 d-block\">\r\n        {eqNum! > 0 && opsStore.filteredNumsArray.length\r\n          ? opsStore.filteredNumsArray.join(\", \")\r\n          : opsStore.numsArray.join(\", \")}\r\n      </span>\r\n\r\n      <CustomButton\r\n        title=\"По возрастанию\"\r\n        className=\"mt-2 me-2\"\r\n        handleClick={() => {\r\n          opsStore.clearFilteredArray();\r\n          opsStore.sortAsc();\r\n        }}\r\n      />\r\n      <CustomButton\r\n        title=\"По убыванию\"\r\n        className=\"mt-2 ms-2\"\r\n        handleClick={() => {\r\n          opsStore.clearFilteredArray();\r\n          opsStore.sortDesc();\r\n        }}\r\n      />\r\n        <InputGroup className=\"mt-2 w-70 mx-auto\">\r\n          <ButtonDropdown\r\n            toggle={function noRefCheck() {}}\r\n            isOpen={isOpen}\r\n            onClick={() => {\r\n              setIsOpen(!isOpen);\r\n            }}\r\n          >\r\n            <DropdownToggle caret>\r\n              {greater ? \"Больше, чем\" : \"Меньше, чем\"}\r\n            </DropdownToggle>\r\n            <DropdownMenu>\r\n              <DropdownItem header>Выберите вариант сравнения</DropdownItem>\r\n              <DropdownItem\r\n                onClick={() => {\r\n                  setGreater(true);\r\n                }}\r\n              >\r\n                Больше, чем\r\n              </DropdownItem>\r\n              <DropdownItem\r\n                onClick={() => {\r\n                  setGreater(false);\r\n                }}\r\n              >\r\n                Меньше, чем\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </ButtonDropdown>\r\n          <Input\r\n            type=\"text\"\r\n            value={eqNum ? eqNum : \"\"}\r\n            name=\"eqNum\"\r\n            onChange={(e) => {\r\n              if (!checkInput(e.target.value)) {\r\n                setEqNum(parseInt(e.target.value));\r\n              }\r\n              if (Number.isNaN(parseInt(e.target.value))) {\r\n                setEqNum(0);\r\n              }\r\n            }}\r\n          />\r\n          <Button\r\n            outline\r\n            onClick={() => {\r\n              if (greater) {\r\n                opsStore.greaterThan(eqNum!);\r\n                return;\r\n              }\r\n              opsStore.lesserThan(eqNum!);\r\n            }}\r\n          >\r\n            Сравнить\r\n          </Button>\r\n        </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(OpsConfirm);\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { Modal, ProgressBar } from \"react-bootstrap\";\r\n\r\ninterface LoadingModalProps {\r\n  keyboardStatus: boolean;\r\n  onShow: boolean;\r\n}\r\n\r\nconst LoadingModal = (props: LoadingModalProps): JSX.Element => {\r\n  const [show, setShow] = useState(props.onShow);\r\n  const [prgBar, setPrgBar] = useState(0);\r\n\r\n  // В течение 5.6 секунд отображаем данный экран, а также каждую секунду увеличиваем\r\n  // ProgressBar на 20%, после чего очищаем и таймаут и интервал\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setPrgBar((prevState) => {\r\n        if (prevState === 100) return 0;\r\n        return Math.min(prevState + 20);\r\n      });\r\n    }, 1000);\r\n    const timeout = setTimeout(() => {\r\n      setShow(false);\r\n    }, 5600);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n      clearTimeout(timeout);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={() => setShow(false)}\r\n      backdrop=\"static\"\r\n      keyboard={props.keyboardStatus}\r\n      className=\"text-center\"\r\n      centered\r\n    >\r\n\r\n      <Modal.Title className=\"mt-2\">Производится расчет...</Modal.Title>\r\n      <Modal.Body>Пожалуйста, дождитесь окончания расчета.</Modal.Body>\r\n      <ProgressBar\r\n        className=\"mb-3 ms-3 me-3\"\r\n        animated\r\n        variant=\"success\"\r\n        now={prgBar}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LoadingModal;","import React, { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport { Input } from \"reactstrap\";\r\n\r\nimport CustomButton from \"../../button/CustomButton.component\";\r\n\r\nimport { opsStore } from \"../../../stores/opsStore\";\r\nimport { checkInput } from \"../../../common/utils/checkInput\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst OpsEnter = (): JSX.Element => {\r\n  const [numbers, setNumbers] = useState<number[]>([]);\r\n  const [tempNum, setTempNum] = useState<number>();\r\n\r\n  useEffect(() => {\r\n    opsStore.setNumbers(numbers);\r\n\r\n    const listener = (event: KeyboardEvent) => {\r\n      if (event.code === \"Enter\") {\r\n        handleTempNumAdd();\r\n        event.preventDefault();\r\n      }\r\n    };\r\n    document.addEventListener(\"keydown\", listener);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", listener);\r\n    };\r\n  });\r\n\r\n  const handleArrayChange =\r\n    (e: SyntheticEvent) =>\r\n    (index: number): void => {\r\n      const { value } = e.target as HTMLTextAreaElement;\r\n\r\n      if (!checkInput(value)) {\r\n        setNumbers((prevArr) => {\r\n          prevArr[index] = parseInt(value);\r\n          return [...prevArr];\r\n        });\r\n      }\r\n      return;\r\n    };\r\n\r\n  const handleTempNumChange = (e: SyntheticEvent): void => {\r\n    const { value } = e.target as HTMLTextAreaElement;\r\n\r\n    if (!checkInput(value)) {\r\n      setTempNum(parseInt(value));\r\n    }\r\n\r\n    if (Number.isNaN(parseInt(value))) {\r\n      setTempNum(0);\r\n    }\r\n  };\r\n\r\n  const handleTempNumAdd = (): void => {\r\n    if (tempNum) setNumbers([...numbers, tempNum]);\r\n    setTempNum(0);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {numbers.map((number, index) => {\r\n        return (\r\n          <Input\r\n            className=\"mt-1 mb-1\"\r\n            type=\"text\"\r\n            value={number ? number : \"\"}\r\n            key={index}\r\n            onChange={(e) => {\r\n              if (Number.isNaN(parseInt(e.target.value))) e.target.value = \"0\"\r\n              handleArrayChange(e)(index);\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n      <Input\r\n        type=\"text\"\r\n        value={tempNum ? tempNum : \"\"}\r\n        onChange={(e) => {\r\n          handleTempNumChange(e);\r\n        }}\r\n      />\r\n      <CustomButton\r\n        title=\"Добавить\"\r\n        className=\"mt-2\"\r\n        handleClick={handleTempNumAdd}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(OpsEnter);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nimport { opsStore } from \"../../../stores/opsStore\";\r\n\r\nconst OpsResult: React.FC = () => {\r\n  const sum = opsStore.sumNumbers();\r\n\r\n  return (\r\n    <Table striped bordered hover>\r\n      <thead>\r\n        <tr>\r\n          <th>Число</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {opsStore.numsArray.map((num: number, index: number) => {\r\n          return <tr key={index}>\r\n            <td>\r\n              <span style={num > 10 ? { color: \"green\" } : { color: \"black\" }}>\r\n                {num}\r\n              </span>\r\n            </td>\r\n          </tr>;\r\n        })}\r\n        <tr>\r\n          <td>\r\n            <strong>ИТОГОВАЯ СУММА: </strong>\r\n            <span style={sum > 10 ? { color: \"green\" } : { color: \"black\" }}>\r\n              {sum}\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default observer(OpsResult);","export const opsItems = [\r\n  {\r\n    id: 1,\r\n    content: {\r\n      title: \"Ввод данных\",\r\n      body: \"Пожалуйста, введите числа в поля ниже. При вводе числа в последнее доступное поле, появится еще одно, куда можно внести дополнительное число. Нажмите на кнопку далее, как только будете готовы.\",\r\n    },\r\n  },\r\n  {\r\n    id: 2,\r\n    content: {\r\n      title: \"Подтверждение данных\",\r\n      body: \"Проверьте ранее введенные данные. Вы также можете отсортировать их в любом выбранном вами порядке, воспользовавшись кнопкой ниже.\",\r\n    },\r\n  },\r\n  {\r\n    id: 3,\r\n    content: {\r\n      title: \"Расчет\",\r\n      body: \"Подождите, производится расчет.\",\r\n    },\r\n  },\r\n  {\r\n      id: 4,\r\n      content: {\r\n          title: 'Результат',\r\n          body: 'В таблице ниже перечислены все ранее введенные вами числа и их сумма.'\r\n      }\r\n  }\r\n];\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport CustomButton from \"../button/CustomButton.component\";\r\nimport OpsItem from \"../ops-item/OpsItem.component\";\r\n\r\nimport OpsConfirm from \"../ops-item/ops-field/OpsConfirm\";\r\nimport LoadingModal from \"../loading-modal/LoadingModal.component\";\r\nimport OpsEnter from \"../ops-item/ops-field/OpsEnter\";\r\nimport OpsResult from \"../ops-item/ops-field/OpsResult\";\r\n\r\nimport { opsItems } from \"../../common/opsItems\";\r\n\r\nimport { opsStore } from \"../../stores/opsStore\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst OpsIter = () => {\r\n  const [itemIndex, setItemIndex] = useState<number>(0);\r\n\r\n  useEffect(() => {\r\n    if (itemIndex === 2) {\r\n      setTimeout(() => {\r\n        setItemIndex(3);\r\n      }, 5600);\r\n    }\r\n  });\r\n\r\n  const decItem = (): void => {\r\n    if (itemIndex === 0) return;\r\n    setItemIndex(itemIndex - 1);\r\n  };\r\n\r\n  const incItem = (): void => {\r\n    if (itemIndex === 3) return;\r\n    setItemIndex(itemIndex + 1);\r\n  };\r\n\r\n  const renderContent = () => {\r\n    switch (itemIndex) {\r\n      case 0:\r\n        return (\r\n          <React.Fragment>\r\n            <Helmet>\r\n              <title>Ввод данных</title>\r\n            </Helmet>\r\n            <OpsEnter />\r\n          </React.Fragment>\r\n        );\r\n      case 1:\r\n        return (\r\n          <React.Fragment>\r\n            <Helmet>\r\n              <title>Подтвердите данные</title>\r\n            </Helmet>\r\n            <OpsConfirm />\r\n          </React.Fragment>\r\n        );\r\n      case 2:\r\n        return (\r\n          <Helmet>\r\n            <title>Расчет</title>\r\n          </Helmet>\r\n        );\r\n      case 3:\r\n        return (\r\n          <React.Fragment>\r\n            <Helmet>\r\n              <title>Результат</title>\r\n            </Helmet>\r\n            <OpsResult />\r\n          </React.Fragment>\r\n        );\r\n    }\r\n  };\r\n\r\n  const backButton = (): JSX.Element => {\r\n    if (itemIndex === 1) {\r\n      return (\r\n        <CustomButton\r\n          className=\"me-2\"\r\n          title=\"Назад\"\r\n          handleClick={() => {\r\n            decItem();\r\n            opsStore.cleaArray();\r\n            opsStore.clearFilteredArray();\r\n          }}\r\n        />\r\n      );\r\n    } else if (itemIndex === 3) {\r\n      return (\r\n        <CustomButton\r\n          className=\"me-2\"\r\n          title=\"Заново\"\r\n          handleClick={() => {\r\n            setItemIndex(0);\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <CustomButton\r\n        className={`me-2 ${itemIndex === 0 ? \"disabled\" : \"\"}`}\r\n        title=\"Назад\"\r\n        handleClick={decItem}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {itemIndex === 2 && <LoadingModal onShow={true} keyboardStatus={false} />}\r\n      <OpsItem\r\n        title={opsItems[itemIndex].content.title}\r\n        body={opsItems[itemIndex].content.body}\r\n      >\r\n        {renderContent()}\r\n      </OpsItem>\r\n      <div className=\"mx-auto mt-3 d-flex justify-content-center\">\r\n        {backButton()}\r\n        <CustomButton\r\n          className={`ms-2 ${\r\n            opsStore.numsArray.length < 2 || itemIndex === 3 ? \"disabled\" : \"\"\r\n          }`}\r\n          title=\"Далее\"\r\n          handleClick={incItem}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(OpsIter);\r\n","export const maskEmail = (email: string): string => {\r\n  const domainName = email.substring(email.indexOf(\"@\") + 2, email.indexOf(\".\"));\r\n  const maskedEmail = email.replace(domainName, \"*\".repeat(domainName.length));\r\n  return maskedEmail;\r\n};\r\n","import React from 'react'; \r\nimport { observer } from 'mobx-react';\r\n\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nimport OpsIter from '../../components/ops-iter/OpsIter.component'\r\n\r\nimport { userStore } from '../../stores/userStore';\r\nimport { maskEmail } from '../../common/utils/maskEmail';\r\n\r\nconst OpsPage: React.FC = () => {\r\n return <Container>\r\n     <Row>\r\n         <Col className='d-sm-none d-md-block' lg=\"6\">\r\n            <span className='lead d-block'>Привет, {maskEmail(userStore.userData!.email!)}</span>\r\n            Воспользуйся полями справа, чтобы произвести операцию сложения.\r\n         </Col>\r\n         <Col lg=\"6\">\r\n             <OpsIter />\r\n         </Col>\r\n     </Row>\r\n </Container>\r\n}\r\n\r\nexport default observer(OpsPage);","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\n\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport { userStore } from \"./stores/userStore\";\r\n\r\nimport HomePage from \"./pages/home/Home.page\";\r\nimport SignUp from \"./components/signup/SignUp.component\";\r\nimport Header from \"./components/header/Header.component\";\r\nimport OpsPage from \"./pages/ops/Ops.page\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Navigate to=\"/add_app\" />} />\r\n        <Route path=\"/add_app\" element={<HomePage />} />\r\n        <Route path=\"/ops\" element={userStore.userData.isLogged ? <OpsPage /> : <Navigate to=\"/signup\" />} /> \r\n        <Route path=\"/signup\" element={userStore.userData.isLogged ? <Navigate to=\"/add_app\" /> : <SignUp />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default observer(App);\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport App from './App'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}